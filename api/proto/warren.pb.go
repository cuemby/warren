// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: api/proto/warren.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Type of health check
type HealthCheck_Type int32

const (
	HealthCheck_HTTP HealthCheck_Type = 0
	HealthCheck_TCP  HealthCheck_Type = 1
	HealthCheck_EXEC HealthCheck_Type = 2
)

// Enum value maps for HealthCheck_Type.
var (
	HealthCheck_Type_name = map[int32]string{
		0: "HTTP",
		1: "TCP",
		2: "EXEC",
	}
	HealthCheck_Type_value = map[string]int32{
		"HTTP": 0,
		"TCP":  1,
		"EXEC": 2,
	}
)

func (x HealthCheck_Type) Enum() *HealthCheck_Type {
	p := new(HealthCheck_Type)
	*p = x
	return p
}

func (x HealthCheck_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheck_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_warren_proto_enumTypes[0].Descriptor()
}

func (HealthCheck_Type) Type() protoreflect.EnumType {
	return &file_api_proto_warren_proto_enumTypes[0]
}

func (x HealthCheck_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheck_Type.Descriptor instead.
func (HealthCheck_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{15, 0}
}

type PortMapping_PublishMode int32

const (
	PortMapping_HOST    PortMapping_PublishMode = 0 // Publish on node running the task
	PortMapping_INGRESS PortMapping_PublishMode = 1 // Publish on all nodes with routing mesh
)

// Enum value maps for PortMapping_PublishMode.
var (
	PortMapping_PublishMode_name = map[int32]string{
		0: "HOST",
		1: "INGRESS",
	}
	PortMapping_PublishMode_value = map[string]int32{
		"HOST":    0,
		"INGRESS": 1,
	}
)

func (x PortMapping_PublishMode) Enum() *PortMapping_PublishMode {
	p := new(PortMapping_PublishMode)
	*p = x
	return p
}

func (x PortMapping_PublishMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PortMapping_PublishMode) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_warren_proto_enumTypes[1].Descriptor()
}

func (PortMapping_PublishMode) Type() protoreflect.EnumType {
	return &file_api_proto_warren_proto_enumTypes[1]
}

func (x PortMapping_PublishMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PortMapping_PublishMode.Descriptor instead.
func (PortMapping_PublishMode) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{23, 0}
}

// Node messages
type Node struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Role          string                 `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"` // "manager" or "worker"
	Address       string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	OverlayIp     string                 `protobuf:"bytes,4,opt,name=overlay_ip,json=overlayIp,proto3" json:"overlay_ip,omitempty"`
	Resources     *NodeResources         `protobuf:"bytes,5,opt,name=resources,proto3" json:"resources,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"` // "ready", "down", "unknown"
	LastHeartbeat *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_heartbeat,json=lastHeartbeat,proto3" json:"last_heartbeat,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_api_proto_warren_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{0}
}

func (x *Node) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Node) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Node) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Node) GetOverlayIp() string {
	if x != nil {
		return x.OverlayIp
	}
	return ""
}

func (x *Node) GetResources() *NodeResources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *Node) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Node) GetLastHeartbeat() *timestamppb.Timestamp {
	if x != nil {
		return x.LastHeartbeat
	}
	return nil
}

func (x *Node) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Node) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type NodeResources struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CpuCores      int64                  `protobuf:"varint,1,opt,name=cpu_cores,json=cpuCores,proto3" json:"cpu_cores,omitempty"`
	MemoryBytes   int64                  `protobuf:"varint,2,opt,name=memory_bytes,json=memoryBytes,proto3" json:"memory_bytes,omitempty"`
	DiskBytes     int64                  `protobuf:"varint,3,opt,name=disk_bytes,json=diskBytes,proto3" json:"disk_bytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeResources) Reset() {
	*x = NodeResources{}
	mi := &file_api_proto_warren_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeResources) ProtoMessage() {}

func (x *NodeResources) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeResources.ProtoReflect.Descriptor instead.
func (*NodeResources) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{1}
}

func (x *NodeResources) GetCpuCores() int64 {
	if x != nil {
		return x.CpuCores
	}
	return 0
}

func (x *NodeResources) GetMemoryBytes() int64 {
	if x != nil {
		return x.MemoryBytes
	}
	return 0
}

func (x *NodeResources) GetDiskBytes() int64 {
	if x != nil {
		return x.DiskBytes
	}
	return 0
}

type RegisterNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Role          string                 `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	Address       string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Resources     *NodeResources         `protobuf:"bytes,4,opt,name=resources,proto3" json:"resources,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterNodeRequest) Reset() {
	*x = RegisterNodeRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeRequest) ProtoMessage() {}

func (x *RegisterNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeRequest.ProtoReflect.Descriptor instead.
func (*RegisterNodeRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterNodeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RegisterNodeRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *RegisterNodeRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RegisterNodeRequest) GetResources() *NodeResources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *RegisterNodeRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type RegisterNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *Node                  `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	OverlayIp     string                 `protobuf:"bytes,2,opt,name=overlay_ip,json=overlayIp,proto3" json:"overlay_ip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterNodeResponse) Reset() {
	*x = RegisterNodeResponse{}
	mi := &file_api_proto_warren_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeResponse) ProtoMessage() {}

func (x *RegisterNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeResponse.ProtoReflect.Descriptor instead.
func (*RegisterNodeResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterNodeResponse) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *RegisterNodeResponse) GetOverlayIp() string {
	if x != nil {
		return x.OverlayIp
	}
	return ""
}

type HeartbeatRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	NodeId             string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	AvailableResources *NodeResources         `protobuf:"bytes,2,opt,name=available_resources,json=availableResources,proto3" json:"available_resources,omitempty"`
	TaskStatuses       []*TaskStatus          `protobuf:"bytes,3,rep,name=task_statuses,json=taskStatuses,proto3" json:"task_statuses,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{4}
}

func (x *HeartbeatRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *HeartbeatRequest) GetAvailableResources() *NodeResources {
	if x != nil {
		return x.AvailableResources
	}
	return nil
}

func (x *HeartbeatRequest) GetTaskStatuses() []*TaskStatus {
	if x != nil {
		return x.TaskStatuses
	}
	return nil
}

type HeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_api_proto_warren_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{5}
}

func (x *HeartbeatResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type TaskStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	ActualState   string                 `protobuf:"bytes,2,opt,name=actual_state,json=actualState,proto3" json:"actual_state,omitempty"` // "running", "failed", "stopped"
	ContainerId   string                 `protobuf:"bytes,3,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskStatus) Reset() {
	*x = TaskStatus{}
	mi := &file_api_proto_warren_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStatus) ProtoMessage() {}

func (x *TaskStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStatus.ProtoReflect.Descriptor instead.
func (*TaskStatus) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{6}
}

func (x *TaskStatus) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskStatus) GetActualState() string {
	if x != nil {
		return x.ActualState
	}
	return ""
}

func (x *TaskStatus) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *TaskStatus) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ListNodesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoleFilter    string                 `protobuf:"bytes,1,opt,name=role_filter,json=roleFilter,proto3" json:"role_filter,omitempty"` // optional: "manager" or "worker"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodesRequest) Reset() {
	*x = ListNodesRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesRequest) ProtoMessage() {}

func (x *ListNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesRequest.ProtoReflect.Descriptor instead.
func (*ListNodesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{7}
}

func (x *ListNodesRequest) GetRoleFilter() string {
	if x != nil {
		return x.RoleFilter
	}
	return ""
}

type ListNodesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*Node                `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodesResponse) Reset() {
	*x = ListNodesResponse{}
	mi := &file_api_proto_warren_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesResponse) ProtoMessage() {}

func (x *ListNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesResponse.ProtoReflect.Descriptor instead.
func (*ListNodesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{8}
}

func (x *ListNodesResponse) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type GetNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeRequest) Reset() {
	*x = GetNodeRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeRequest) ProtoMessage() {}

func (x *GetNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeRequest.ProtoReflect.Descriptor instead.
func (*GetNodeRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{9}
}

func (x *GetNodeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *Node                  `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeResponse) Reset() {
	*x = GetNodeResponse{}
	mi := &file_api_proto_warren_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeResponse) ProtoMessage() {}

func (x *GetNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeResponse.ProtoReflect.Descriptor instead.
func (*GetNodeResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{10}
}

func (x *GetNodeResponse) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type RemoveNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveNodeRequest) Reset() {
	*x = RemoveNodeRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNodeRequest) ProtoMessage() {}

func (x *RemoveNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNodeRequest.ProtoReflect.Descriptor instead.
func (*RemoveNodeRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{11}
}

func (x *RemoveNodeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RemoveNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveNodeResponse) Reset() {
	*x = RemoveNodeResponse{}
	mi := &file_api_proto_warren_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNodeResponse) ProtoMessage() {}

func (x *RemoveNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNodeResponse.ProtoReflect.Descriptor instead.
func (*RemoveNodeResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{12}
}

func (x *RemoveNodeResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// Service messages
type Service struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Image          string                 `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Replicas       int32                  `protobuf:"varint,4,opt,name=replicas,proto3" json:"replicas,omitempty"`
	Mode           string                 `protobuf:"bytes,5,opt,name=mode,proto3" json:"mode,omitempty"`                                           // "replicated" or "global"
	DeployStrategy string                 `protobuf:"bytes,6,opt,name=deploy_strategy,json=deployStrategy,proto3" json:"deploy_strategy,omitempty"` // "rolling", "blue-green", "canary"
	UpdateConfig   *UpdateConfig          `protobuf:"bytes,7,opt,name=update_config,json=updateConfig,proto3" json:"update_config,omitempty"`
	HealthCheck    *HealthCheck           `protobuf:"bytes,8,opt,name=health_check,json=healthCheck,proto3" json:"health_check,omitempty"`
	RestartPolicy  *RestartPolicy         `protobuf:"bytes,9,opt,name=restart_policy,json=restartPolicy,proto3" json:"restart_policy,omitempty"`
	Resources      *ResourceRequirements  `protobuf:"bytes,10,opt,name=resources,proto3" json:"resources,omitempty"`
	Networks       []string               `protobuf:"bytes,11,rep,name=networks,proto3" json:"networks,omitempty"`
	Volumes        []*VolumeMount         `protobuf:"bytes,12,rep,name=volumes,proto3" json:"volumes,omitempty"`
	Env            map[string]string      `protobuf:"bytes,13,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Command        []string               `protobuf:"bytes,14,rep,name=command,proto3" json:"command,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Ports          []*PortMapping         `protobuf:"bytes,17,rep,name=ports,proto3" json:"ports,omitempty"`                                 // Published ports
	StopTimeout    int32                  `protobuf:"varint,18,opt,name=stop_timeout,json=stopTimeout,proto3" json:"stop_timeout,omitempty"` // Seconds to wait before force-killing (default: 10)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Service) Reset() {
	*x = Service{}
	mi := &file_api_proto_warren_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{13}
}

func (x *Service) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Service) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Service) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Service) GetReplicas() int32 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

func (x *Service) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *Service) GetDeployStrategy() string {
	if x != nil {
		return x.DeployStrategy
	}
	return ""
}

func (x *Service) GetUpdateConfig() *UpdateConfig {
	if x != nil {
		return x.UpdateConfig
	}
	return nil
}

func (x *Service) GetHealthCheck() *HealthCheck {
	if x != nil {
		return x.HealthCheck
	}
	return nil
}

func (x *Service) GetRestartPolicy() *RestartPolicy {
	if x != nil {
		return x.RestartPolicy
	}
	return nil
}

func (x *Service) GetResources() *ResourceRequirements {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *Service) GetNetworks() []string {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *Service) GetVolumes() []*VolumeMount {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *Service) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *Service) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *Service) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Service) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Service) GetPorts() []*PortMapping {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *Service) GetStopTimeout() int32 {
	if x != nil {
		return x.StopTimeout
	}
	return 0
}

type UpdateConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Parallelism   int32                  `protobuf:"varint,1,opt,name=parallelism,proto3" json:"parallelism,omitempty"`
	DelaySeconds  int32                  `protobuf:"varint,2,opt,name=delay_seconds,json=delaySeconds,proto3" json:"delay_seconds,omitempty"`
	FailureAction string                 `protobuf:"bytes,3,opt,name=failure_action,json=failureAction,proto3" json:"failure_action,omitempty"` // "pause", "continue", "rollback"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateConfig) Reset() {
	*x = UpdateConfig{}
	mi := &file_api_proto_warren_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfig) ProtoMessage() {}

func (x *UpdateConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfig.ProtoReflect.Descriptor instead.
func (*UpdateConfig) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateConfig) GetParallelism() int32 {
	if x != nil {
		return x.Parallelism
	}
	return 0
}

func (x *UpdateConfig) GetDelaySeconds() int32 {
	if x != nil {
		return x.DelaySeconds
	}
	return 0
}

func (x *UpdateConfig) GetFailureAction() string {
	if x != nil {
		return x.FailureAction
	}
	return ""
}

type HealthCheck struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  HealthCheck_Type       `protobuf:"varint,1,opt,name=type,proto3,enum=warren.v1.HealthCheck_Type" json:"type,omitempty"`
	// Type-specific configurations
	Http *HTTPHealthCheck `protobuf:"bytes,2,opt,name=http,proto3" json:"http,omitempty"`
	Tcp  *TCPHealthCheck  `protobuf:"bytes,3,opt,name=tcp,proto3" json:"tcp,omitempty"`
	Exec *ExecHealthCheck `protobuf:"bytes,4,opt,name=exec,proto3" json:"exec,omitempty"`
	// Common configuration
	IntervalSeconds    int32 `protobuf:"varint,5,opt,name=interval_seconds,json=intervalSeconds,proto3" json:"interval_seconds,omitempty"`            // Time between checks (default: 30s)
	TimeoutSeconds     int32 `protobuf:"varint,6,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`               // Check timeout (default: 10s)
	Retries            int32 `protobuf:"varint,7,opt,name=retries,proto3" json:"retries,omitempty"`                                                   // Failures before unhealthy (default: 3)
	StartPeriodSeconds int32 `protobuf:"varint,8,opt,name=start_period_seconds,json=startPeriodSeconds,proto3" json:"start_period_seconds,omitempty"` // Grace period for startup (default: 0s)
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *HealthCheck) Reset() {
	*x = HealthCheck{}
	mi := &file_api_proto_warren_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheck) ProtoMessage() {}

func (x *HealthCheck) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheck.ProtoReflect.Descriptor instead.
func (*HealthCheck) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{15}
}

func (x *HealthCheck) GetType() HealthCheck_Type {
	if x != nil {
		return x.Type
	}
	return HealthCheck_HTTP
}

func (x *HealthCheck) GetHttp() *HTTPHealthCheck {
	if x != nil {
		return x.Http
	}
	return nil
}

func (x *HealthCheck) GetTcp() *TCPHealthCheck {
	if x != nil {
		return x.Tcp
	}
	return nil
}

func (x *HealthCheck) GetExec() *ExecHealthCheck {
	if x != nil {
		return x.Exec
	}
	return nil
}

func (x *HealthCheck) GetIntervalSeconds() int32 {
	if x != nil {
		return x.IntervalSeconds
	}
	return 0
}

func (x *HealthCheck) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *HealthCheck) GetRetries() int32 {
	if x != nil {
		return x.Retries
	}
	return 0
}

func (x *HealthCheck) GetStartPeriodSeconds() int32 {
	if x != nil {
		return x.StartPeriodSeconds
	}
	return 0
}

type HTTPHealthCheck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`                                           // HTTP path (e.g., "/health")
	Port          int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`                                          // Container port
	Scheme        string                 `protobuf:"bytes,3,opt,name=scheme,proto3" json:"scheme,omitempty"`                                       // "http" or "https" (default: "http")
	Headers       []*Header              `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty"`                                     // Custom headers
	StatusCodeMin int32                  `protobuf:"varint,5,opt,name=status_code_min,json=statusCodeMin,proto3" json:"status_code_min,omitempty"` // Min acceptable status (default: 200)
	StatusCodeMax int32                  `protobuf:"varint,6,opt,name=status_code_max,json=statusCodeMax,proto3" json:"status_code_max,omitempty"` // Max acceptable status (default: 399)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HTTPHealthCheck) Reset() {
	*x = HTTPHealthCheck{}
	mi := &file_api_proto_warren_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HTTPHealthCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPHealthCheck) ProtoMessage() {}

func (x *HTTPHealthCheck) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPHealthCheck.ProtoReflect.Descriptor instead.
func (*HTTPHealthCheck) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{16}
}

func (x *HTTPHealthCheck) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *HTTPHealthCheck) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *HTTPHealthCheck) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *HTTPHealthCheck) GetHeaders() []*Header {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HTTPHealthCheck) GetStatusCodeMin() int32 {
	if x != nil {
		return x.StatusCodeMin
	}
	return 0
}

func (x *HTTPHealthCheck) GetStatusCodeMax() int32 {
	if x != nil {
		return x.StatusCodeMax
	}
	return 0
}

type Header struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Header) Reset() {
	*x = Header{}
	mi := &file_api_proto_warren_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{17}
}

func (x *Header) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Header) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type TCPHealthCheck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Port          int32                  `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"` // Container port to check
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TCPHealthCheck) Reset() {
	*x = TCPHealthCheck{}
	mi := &file_api_proto_warren_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TCPHealthCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCPHealthCheck) ProtoMessage() {}

func (x *TCPHealthCheck) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCPHealthCheck.ProtoReflect.Descriptor instead.
func (*TCPHealthCheck) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{18}
}

func (x *TCPHealthCheck) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type ExecHealthCheck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       []string               `protobuf:"bytes,1,rep,name=command,proto3" json:"command,omitempty"` // Command to execute (e.g., ["pg_isready"])
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecHealthCheck) Reset() {
	*x = ExecHealthCheck{}
	mi := &file_api_proto_warren_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecHealthCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecHealthCheck) ProtoMessage() {}

func (x *ExecHealthCheck) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecHealthCheck.ProtoReflect.Descriptor instead.
func (*ExecHealthCheck) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{19}
}

func (x *ExecHealthCheck) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

type RestartPolicy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Condition     string                 `protobuf:"bytes,1,opt,name=condition,proto3" json:"condition,omitempty"` // "none", "on-failure", "any"
	MaxAttempts   int32                  `protobuf:"varint,2,opt,name=max_attempts,json=maxAttempts,proto3" json:"max_attempts,omitempty"`
	DelaySeconds  int32                  `protobuf:"varint,3,opt,name=delay_seconds,json=delaySeconds,proto3" json:"delay_seconds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestartPolicy) Reset() {
	*x = RestartPolicy{}
	mi := &file_api_proto_warren_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartPolicy) ProtoMessage() {}

func (x *RestartPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartPolicy.ProtoReflect.Descriptor instead.
func (*RestartPolicy) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{20}
}

func (x *RestartPolicy) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

func (x *RestartPolicy) GetMaxAttempts() int32 {
	if x != nil {
		return x.MaxAttempts
	}
	return 0
}

func (x *RestartPolicy) GetDelaySeconds() int32 {
	if x != nil {
		return x.DelaySeconds
	}
	return 0
}

type ResourceRequirements struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	CpuShares              int64                  `protobuf:"varint,1,opt,name=cpu_shares,json=cpuShares,proto3" json:"cpu_shares,omitempty"`
	MemoryBytes            int64                  `protobuf:"varint,2,opt,name=memory_bytes,json=memoryBytes,proto3" json:"memory_bytes,omitempty"`
	MemoryReservationBytes int64                  `protobuf:"varint,3,opt,name=memory_reservation_bytes,json=memoryReservationBytes,proto3" json:"memory_reservation_bytes,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ResourceRequirements) Reset() {
	*x = ResourceRequirements{}
	mi := &file_api_proto_warren_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceRequirements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceRequirements) ProtoMessage() {}

func (x *ResourceRequirements) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceRequirements.ProtoReflect.Descriptor instead.
func (*ResourceRequirements) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{21}
}

func (x *ResourceRequirements) GetCpuShares() int64 {
	if x != nil {
		return x.CpuShares
	}
	return 0
}

func (x *ResourceRequirements) GetMemoryBytes() int64 {
	if x != nil {
		return x.MemoryBytes
	}
	return 0
}

func (x *ResourceRequirements) GetMemoryReservationBytes() int64 {
	if x != nil {
		return x.MemoryReservationBytes
	}
	return 0
}

type VolumeMount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Source        string                 `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Target        string                 `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	ReadOnly      bool                   `protobuf:"varint,3,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VolumeMount) Reset() {
	*x = VolumeMount{}
	mi := &file_api_proto_warren_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VolumeMount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeMount) ProtoMessage() {}

func (x *VolumeMount) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeMount.ProtoReflect.Descriptor instead.
func (*VolumeMount) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{22}
}

func (x *VolumeMount) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *VolumeMount) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *VolumeMount) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

type PortMapping struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Name          string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                          // Optional port name
	ContainerPort int32                   `protobuf:"varint,2,opt,name=container_port,json=containerPort,proto3" json:"container_port,omitempty"`                                  // Port inside container (target)
	HostPort      int32                   `protobuf:"varint,3,opt,name=host_port,json=hostPort,proto3" json:"host_port,omitempty"`                                                 // Port on host/cluster (published)
	Protocol      string                  `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`                                                                  // "tcp" or "udp" (default: "tcp")
	PublishMode   PortMapping_PublishMode `protobuf:"varint,5,opt,name=publish_mode,json=publishMode,proto3,enum=warren.v1.PortMapping_PublishMode" json:"publish_mode,omitempty"` // Publishing mode (default: HOST)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PortMapping) Reset() {
	*x = PortMapping{}
	mi := &file_api_proto_warren_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PortMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortMapping) ProtoMessage() {}

func (x *PortMapping) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortMapping.ProtoReflect.Descriptor instead.
func (*PortMapping) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{23}
}

func (x *PortMapping) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PortMapping) GetContainerPort() int32 {
	if x != nil {
		return x.ContainerPort
	}
	return 0
}

func (x *PortMapping) GetHostPort() int32 {
	if x != nil {
		return x.HostPort
	}
	return 0
}

func (x *PortMapping) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *PortMapping) GetPublishMode() PortMapping_PublishMode {
	if x != nil {
		return x.PublishMode
	}
	return PortMapping_HOST
}

type CreateServiceRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Name           string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image          string                 `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Replicas       int32                  `protobuf:"varint,3,opt,name=replicas,proto3" json:"replicas,omitempty"`
	Mode           string                 `protobuf:"bytes,4,opt,name=mode,proto3" json:"mode,omitempty"`
	DeployStrategy string                 `protobuf:"bytes,5,opt,name=deploy_strategy,json=deployStrategy,proto3" json:"deploy_strategy,omitempty"`
	UpdateConfig   *UpdateConfig          `protobuf:"bytes,6,opt,name=update_config,json=updateConfig,proto3" json:"update_config,omitempty"`
	HealthCheck    *HealthCheck           `protobuf:"bytes,7,opt,name=health_check,json=healthCheck,proto3" json:"health_check,omitempty"`
	RestartPolicy  *RestartPolicy         `protobuf:"bytes,8,opt,name=restart_policy,json=restartPolicy,proto3" json:"restart_policy,omitempty"`
	Resources      *ResourceRequirements  `protobuf:"bytes,9,opt,name=resources,proto3" json:"resources,omitempty"`
	Networks       []string               `protobuf:"bytes,10,rep,name=networks,proto3" json:"networks,omitempty"`
	Volumes        []*VolumeMount         `protobuf:"bytes,11,rep,name=volumes,proto3" json:"volumes,omitempty"`
	Env            map[string]string      `protobuf:"bytes,12,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Command        []string               `protobuf:"bytes,13,rep,name=command,proto3" json:"command,omitempty"`
	Ports          []*PortMapping         `protobuf:"bytes,14,rep,name=ports,proto3" json:"ports,omitempty"`                                 // Published ports
	StopTimeout    int32                  `protobuf:"varint,15,opt,name=stop_timeout,json=stopTimeout,proto3" json:"stop_timeout,omitempty"` // Seconds to wait before force-killing (default: 10)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateServiceRequest) Reset() {
	*x = CreateServiceRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceRequest) ProtoMessage() {}

func (x *CreateServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServiceRequest.ProtoReflect.Descriptor instead.
func (*CreateServiceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{24}
}

func (x *CreateServiceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateServiceRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CreateServiceRequest) GetReplicas() int32 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

func (x *CreateServiceRequest) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *CreateServiceRequest) GetDeployStrategy() string {
	if x != nil {
		return x.DeployStrategy
	}
	return ""
}

func (x *CreateServiceRequest) GetUpdateConfig() *UpdateConfig {
	if x != nil {
		return x.UpdateConfig
	}
	return nil
}

func (x *CreateServiceRequest) GetHealthCheck() *HealthCheck {
	if x != nil {
		return x.HealthCheck
	}
	return nil
}

func (x *CreateServiceRequest) GetRestartPolicy() *RestartPolicy {
	if x != nil {
		return x.RestartPolicy
	}
	return nil
}

func (x *CreateServiceRequest) GetResources() *ResourceRequirements {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *CreateServiceRequest) GetNetworks() []string {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *CreateServiceRequest) GetVolumes() []*VolumeMount {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *CreateServiceRequest) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *CreateServiceRequest) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *CreateServiceRequest) GetPorts() []*PortMapping {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *CreateServiceRequest) GetStopTimeout() int32 {
	if x != nil {
		return x.StopTimeout
	}
	return 0
}

type CreateServiceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       *Service               `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateServiceResponse) Reset() {
	*x = CreateServiceResponse{}
	mi := &file_api_proto_warren_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceResponse) ProtoMessage() {}

func (x *CreateServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServiceResponse.ProtoReflect.Descriptor instead.
func (*CreateServiceResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{25}
}

func (x *CreateServiceResponse) GetService() *Service {
	if x != nil {
		return x.Service
	}
	return nil
}

type UpdateServiceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Replicas      int32                  `protobuf:"varint,2,opt,name=replicas,proto3" json:"replicas,omitempty"`
	Image         string                 `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Env           map[string]string      `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateServiceRequest) Reset() {
	*x = UpdateServiceRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServiceRequest) ProtoMessage() {}

func (x *UpdateServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServiceRequest.ProtoReflect.Descriptor instead.
func (*UpdateServiceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateServiceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateServiceRequest) GetReplicas() int32 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

func (x *UpdateServiceRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *UpdateServiceRequest) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

type UpdateServiceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       *Service               `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateServiceResponse) Reset() {
	*x = UpdateServiceResponse{}
	mi := &file_api_proto_warren_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServiceResponse) ProtoMessage() {}

func (x *UpdateServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServiceResponse.ProtoReflect.Descriptor instead.
func (*UpdateServiceResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateServiceResponse) GetService() *Service {
	if x != nil {
		return x.Service
	}
	return nil
}

type DeleteServiceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteServiceRequest) Reset() {
	*x = DeleteServiceRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServiceRequest) ProtoMessage() {}

func (x *DeleteServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServiceRequest.ProtoReflect.Descriptor instead.
func (*DeleteServiceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteServiceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteServiceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteServiceResponse) Reset() {
	*x = DeleteServiceResponse{}
	mi := &file_api_proto_warren_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServiceResponse) ProtoMessage() {}

func (x *DeleteServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServiceResponse.ProtoReflect.Descriptor instead.
func (*DeleteServiceResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteServiceResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetServiceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // can query by name or id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServiceRequest) Reset() {
	*x = GetServiceRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceRequest) ProtoMessage() {}

func (x *GetServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceRequest.ProtoReflect.Descriptor instead.
func (*GetServiceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{30}
}

func (x *GetServiceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetServiceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetServiceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       *Service               `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServiceResponse) Reset() {
	*x = GetServiceResponse{}
	mi := &file_api_proto_warren_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceResponse) ProtoMessage() {}

func (x *GetServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceResponse.ProtoReflect.Descriptor instead.
func (*GetServiceResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{31}
}

func (x *GetServiceResponse) GetService() *Service {
	if x != nil {
		return x.Service
	}
	return nil
}

type ListServicesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServicesRequest) Reset() {
	*x = ListServicesRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServicesRequest) ProtoMessage() {}

func (x *ListServicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServicesRequest.ProtoReflect.Descriptor instead.
func (*ListServicesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{32}
}

type ListServicesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Services      []*Service             `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServicesResponse) Reset() {
	*x = ListServicesResponse{}
	mi := &file_api_proto_warren_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServicesResponse) ProtoMessage() {}

func (x *ListServicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServicesResponse.ProtoReflect.Descriptor instead.
func (*ListServicesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{33}
}

func (x *ListServicesResponse) GetServices() []*Service {
	if x != nil {
		return x.Services
	}
	return nil
}

// Task messages
type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ServiceId     string                 `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	ServiceName   string                 `protobuf:"bytes,3,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	NodeId        string                 `protobuf:"bytes,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ContainerId   string                 `protobuf:"bytes,5,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	DesiredState  string                 `protobuf:"bytes,6,opt,name=desired_state,json=desiredState,proto3" json:"desired_state,omitempty"` // "running", "shutdown"
	ActualState   string                 `protobuf:"bytes,7,opt,name=actual_state,json=actualState,proto3" json:"actual_state,omitempty"`    // "pending", "running", "failed", "stopped"
	Image         string                 `protobuf:"bytes,8,opt,name=image,proto3" json:"image,omitempty"`
	Command       []string               `protobuf:"bytes,9,rep,name=command,proto3" json:"command,omitempty"`
	Env           map[string]string      `protobuf:"bytes,10,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Resources     *ResourceRequirements  `protobuf:"bytes,11,opt,name=resources,proto3" json:"resources,omitempty"`
	Volumes       []*VolumeMount         `protobuf:"bytes,12,rep,name=volumes,proto3" json:"volumes,omitempty"`
	HealthCheck   *HealthCheck           `protobuf:"bytes,13,opt,name=health_check,json=healthCheck,proto3" json:"health_check,omitempty"`
	RestartPolicy *RestartPolicy         `protobuf:"bytes,14,opt,name=restart_policy,json=restartPolicy,proto3" json:"restart_policy,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Error         string                 `protobuf:"bytes,17,opt,name=error,proto3" json:"error,omitempty"`
	Secrets       []string               `protobuf:"bytes,18,rep,name=secrets,proto3" json:"secrets,omitempty"`                             // Secret names to mount
	StopTimeout   int32                  `protobuf:"varint,19,opt,name=stop_timeout,json=stopTimeout,proto3" json:"stop_timeout,omitempty"` // Seconds to wait before force-killing (default: 10)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_api_proto_warren_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{34}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *Task) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *Task) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *Task) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *Task) GetDesiredState() string {
	if x != nil {
		return x.DesiredState
	}
	return ""
}

func (x *Task) GetActualState() string {
	if x != nil {
		return x.ActualState
	}
	return ""
}

func (x *Task) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Task) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *Task) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *Task) GetResources() *ResourceRequirements {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *Task) GetVolumes() []*VolumeMount {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *Task) GetHealthCheck() *HealthCheck {
	if x != nil {
		return x.HealthCheck
	}
	return nil
}

func (x *Task) GetRestartPolicy() *RestartPolicy {
	if x != nil {
		return x.RestartPolicy
	}
	return nil
}

func (x *Task) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Task) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Task) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *Task) GetSecrets() []string {
	if x != nil {
		return x.Secrets
	}
	return nil
}

func (x *Task) GetStopTimeout() int32 {
	if x != nil {
		return x.StopTimeout
	}
	return 0
}

type UpdateTaskStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	NodeId        string                 `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ActualState   string                 `protobuf:"bytes,3,opt,name=actual_state,json=actualState,proto3" json:"actual_state,omitempty"`
	ContainerId   string                 `protobuf:"bytes,4,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Error         string                 `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTaskStatusRequest) Reset() {
	*x = UpdateTaskStatusRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTaskStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskStatusRequest) ProtoMessage() {}

func (x *UpdateTaskStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateTaskStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{35}
}

func (x *UpdateTaskStatusRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *UpdateTaskStatusRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *UpdateTaskStatusRequest) GetActualState() string {
	if x != nil {
		return x.ActualState
	}
	return ""
}

func (x *UpdateTaskStatusRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *UpdateTaskStatusRequest) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UpdateTaskStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTaskStatusResponse) Reset() {
	*x = UpdateTaskStatusResponse{}
	mi := &file_api_proto_warren_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTaskStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskStatusResponse) ProtoMessage() {}

func (x *UpdateTaskStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateTaskStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateTaskStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ListTasksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceId     string                 `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"` // optional filter
	NodeId        string                 `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`          // optional filter
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTasksRequest) Reset() {
	*x = ListTasksRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksRequest) ProtoMessage() {}

func (x *ListTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksRequest.ProtoReflect.Descriptor instead.
func (*ListTasksRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{37}
}

func (x *ListTasksRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ListTasksRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type ListTasksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tasks         []*Task                `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTasksResponse) Reset() {
	*x = ListTasksResponse{}
	mi := &file_api_proto_warren_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksResponse) ProtoMessage() {}

func (x *ListTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksResponse.ProtoReflect.Descriptor instead.
func (*ListTasksResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{38}
}

func (x *ListTasksResponse) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type GetTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskRequest) Reset() {
	*x = GetTaskRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskRequest) ProtoMessage() {}

func (x *GetTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskRequest.ProtoReflect.Descriptor instead.
func (*GetTaskRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{39}
}

func (x *GetTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskResponse) Reset() {
	*x = GetTaskResponse{}
	mi := &file_api_proto_warren_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskResponse) ProtoMessage() {}

func (x *GetTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskResponse.ProtoReflect.Descriptor instead.
func (*GetTaskResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{40}
}

func (x *GetTaskResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type WatchTasksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchTasksRequest) Reset() {
	*x = WatchTasksRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchTasksRequest) ProtoMessage() {}

func (x *WatchTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchTasksRequest.ProtoReflect.Descriptor instead.
func (*WatchTasksRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{41}
}

func (x *WatchTasksRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type TaskEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // "add", "update", "delete"
	Task          *Task                  `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskEvent) Reset() {
	*x = TaskEvent{}
	mi := &file_api_proto_warren_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskEvent) ProtoMessage() {}

func (x *TaskEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskEvent.ProtoReflect.Descriptor instead.
func (*TaskEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{42}
}

func (x *TaskEvent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TaskEvent) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

// Secret messages
type Secret struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Data          []byte                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"` // Encrypted data (only included in worker retrieval)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Secret) Reset() {
	*x = Secret{}
	mi := &file_api_proto_warren_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret) ProtoMessage() {}

func (x *Secret) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret.ProtoReflect.Descriptor instead.
func (*Secret) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{43}
}

func (x *Secret) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Secret) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Secret) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Secret) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateSecretRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSecretRequest) Reset() {
	*x = CreateSecretRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSecretRequest) ProtoMessage() {}

func (x *CreateSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSecretRequest.ProtoReflect.Descriptor instead.
func (*CreateSecretRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{44}
}

func (x *CreateSecretRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSecretRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateSecretResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Secret        *Secret                `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSecretResponse) Reset() {
	*x = CreateSecretResponse{}
	mi := &file_api_proto_warren_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSecretResponse) ProtoMessage() {}

func (x *CreateSecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSecretResponse.ProtoReflect.Descriptor instead.
func (*CreateSecretResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{45}
}

func (x *CreateSecretResponse) GetSecret() *Secret {
	if x != nil {
		return x.Secret
	}
	return nil
}

type DeleteSecretRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSecretRequest) Reset() {
	*x = DeleteSecretRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSecretRequest) ProtoMessage() {}

func (x *DeleteSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSecretRequest.ProtoReflect.Descriptor instead.
func (*DeleteSecretRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{46}
}

func (x *DeleteSecretRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteSecretResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSecretResponse) Reset() {
	*x = DeleteSecretResponse{}
	mi := &file_api_proto_warren_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSecretResponse) ProtoMessage() {}

func (x *DeleteSecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSecretResponse.ProtoReflect.Descriptor instead.
func (*DeleteSecretResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{47}
}

func (x *DeleteSecretResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetSecretByNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSecretByNameRequest) Reset() {
	*x = GetSecretByNameRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSecretByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecretByNameRequest) ProtoMessage() {}

func (x *GetSecretByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecretByNameRequest.ProtoReflect.Descriptor instead.
func (*GetSecretByNameRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{48}
}

func (x *GetSecretByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetSecretByNameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Secret        *Secret                `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSecretByNameResponse) Reset() {
	*x = GetSecretByNameResponse{}
	mi := &file_api_proto_warren_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSecretByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecretByNameResponse) ProtoMessage() {}

func (x *GetSecretByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecretByNameResponse.ProtoReflect.Descriptor instead.
func (*GetSecretByNameResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{49}
}

func (x *GetSecretByNameResponse) GetSecret() *Secret {
	if x != nil {
		return x.Secret
	}
	return nil
}

type ListSecretsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSecretsRequest) Reset() {
	*x = ListSecretsRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSecretsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSecretsRequest) ProtoMessage() {}

func (x *ListSecretsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSecretsRequest.ProtoReflect.Descriptor instead.
func (*ListSecretsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{50}
}

type ListSecretsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Secrets       []*Secret              `protobuf:"bytes,1,rep,name=secrets,proto3" json:"secrets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSecretsResponse) Reset() {
	*x = ListSecretsResponse{}
	mi := &file_api_proto_warren_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSecretsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSecretsResponse) ProtoMessage() {}

func (x *ListSecretsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSecretsResponse.ProtoReflect.Descriptor instead.
func (*ListSecretsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{51}
}

func (x *ListSecretsResponse) GetSecrets() []*Secret {
	if x != nil {
		return x.Secrets
	}
	return nil
}

// Volume messages
type Volume struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Driver        string                 `protobuf:"bytes,3,opt,name=driver,proto3" json:"driver,omitempty"`
	DriverOpts    map[string]string      `protobuf:"bytes,4,rep,name=driver_opts,json=driverOpts,proto3" json:"driver_opts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Labels        map[string]string      `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	NodeId        string                 `protobuf:"bytes,7,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`          // Node affinity for local volumes
	MountPath     string                 `protobuf:"bytes,8,opt,name=mount_path,json=mountPath,proto3" json:"mount_path,omitempty"` // Host mount path
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Volume) Reset() {
	*x = Volume{}
	mi := &file_api_proto_warren_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Volume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Volume) ProtoMessage() {}

func (x *Volume) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Volume.ProtoReflect.Descriptor instead.
func (*Volume) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{52}
}

func (x *Volume) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Volume) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Volume) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *Volume) GetDriverOpts() map[string]string {
	if x != nil {
		return x.DriverOpts
	}
	return nil
}

func (x *Volume) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Volume) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Volume) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *Volume) GetMountPath() string {
	if x != nil {
		return x.MountPath
	}
	return ""
}

type CreateVolumeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Driver        string                 `protobuf:"bytes,2,opt,name=driver,proto3" json:"driver,omitempty"`
	DriverOpts    map[string]string      `protobuf:"bytes,3,rep,name=driver_opts,json=driverOpts,proto3" json:"driver_opts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Labels        map[string]string      `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVolumeRequest) Reset() {
	*x = CreateVolumeRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolumeRequest) ProtoMessage() {}

func (x *CreateVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVolumeRequest.ProtoReflect.Descriptor instead.
func (*CreateVolumeRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{53}
}

func (x *CreateVolumeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateVolumeRequest) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *CreateVolumeRequest) GetDriverOpts() map[string]string {
	if x != nil {
		return x.DriverOpts
	}
	return nil
}

func (x *CreateVolumeRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type CreateVolumeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Volume        *Volume                `protobuf:"bytes,1,opt,name=volume,proto3" json:"volume,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVolumeResponse) Reset() {
	*x = CreateVolumeResponse{}
	mi := &file_api_proto_warren_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolumeResponse) ProtoMessage() {}

func (x *CreateVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVolumeResponse.ProtoReflect.Descriptor instead.
func (*CreateVolumeResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{54}
}

func (x *CreateVolumeResponse) GetVolume() *Volume {
	if x != nil {
		return x.Volume
	}
	return nil
}

type DeleteVolumeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteVolumeRequest) Reset() {
	*x = DeleteVolumeRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVolumeRequest) ProtoMessage() {}

func (x *DeleteVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVolumeRequest.ProtoReflect.Descriptor instead.
func (*DeleteVolumeRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{55}
}

func (x *DeleteVolumeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteVolumeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteVolumeResponse) Reset() {
	*x = DeleteVolumeResponse{}
	mi := &file_api_proto_warren_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVolumeResponse) ProtoMessage() {}

func (x *DeleteVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVolumeResponse.ProtoReflect.Descriptor instead.
func (*DeleteVolumeResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{56}
}

func (x *DeleteVolumeResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetVolumeByNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVolumeByNameRequest) Reset() {
	*x = GetVolumeByNameRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVolumeByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVolumeByNameRequest) ProtoMessage() {}

func (x *GetVolumeByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVolumeByNameRequest.ProtoReflect.Descriptor instead.
func (*GetVolumeByNameRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{57}
}

func (x *GetVolumeByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetVolumeByNameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Volume        *Volume                `protobuf:"bytes,1,opt,name=volume,proto3" json:"volume,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVolumeByNameResponse) Reset() {
	*x = GetVolumeByNameResponse{}
	mi := &file_api_proto_warren_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVolumeByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVolumeByNameResponse) ProtoMessage() {}

func (x *GetVolumeByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVolumeByNameResponse.ProtoReflect.Descriptor instead.
func (*GetVolumeByNameResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{58}
}

func (x *GetVolumeByNameResponse) GetVolume() *Volume {
	if x != nil {
		return x.Volume
	}
	return nil
}

type ListVolumesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVolumesRequest) Reset() {
	*x = ListVolumesRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVolumesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVolumesRequest) ProtoMessage() {}

func (x *ListVolumesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVolumesRequest.ProtoReflect.Descriptor instead.
func (*ListVolumesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{59}
}

type ListVolumesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Volumes       []*Volume              `protobuf:"bytes,1,rep,name=volumes,proto3" json:"volumes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVolumesResponse) Reset() {
	*x = ListVolumesResponse{}
	mi := &file_api_proto_warren_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVolumesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVolumesResponse) ProtoMessage() {}

func (x *ListVolumesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVolumesResponse.ProtoReflect.Descriptor instead.
func (*ListVolumesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{60}
}

func (x *ListVolumesResponse) GetVolumes() []*Volume {
	if x != nil {
		return x.Volumes
	}
	return nil
}

// Cluster messages
type GenerateJoinTokenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Role          string                 `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"` // "manager" or "worker"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateJoinTokenRequest) Reset() {
	*x = GenerateJoinTokenRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateJoinTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateJoinTokenRequest) ProtoMessage() {}

func (x *GenerateJoinTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateJoinTokenRequest.ProtoReflect.Descriptor instead.
func (*GenerateJoinTokenRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{61}
}

func (x *GenerateJoinTokenRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type GenerateJoinTokenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Role          string                 `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateJoinTokenResponse) Reset() {
	*x = GenerateJoinTokenResponse{}
	mi := &file_api_proto_warren_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateJoinTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateJoinTokenResponse) ProtoMessage() {}

func (x *GenerateJoinTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateJoinTokenResponse.ProtoReflect.Descriptor instead.
func (*GenerateJoinTokenResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{62}
}

func (x *GenerateJoinTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GenerateJoinTokenResponse) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *GenerateJoinTokenResponse) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

type JoinClusterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	BindAddr      string                 `protobuf:"bytes,2,opt,name=bind_addr,json=bindAddr,proto3" json:"bind_addr,omitempty"`
	Token         string                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinClusterRequest) Reset() {
	*x = JoinClusterRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinClusterRequest) ProtoMessage() {}

func (x *JoinClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinClusterRequest.ProtoReflect.Descriptor instead.
func (*JoinClusterRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{63}
}

func (x *JoinClusterRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *JoinClusterRequest) GetBindAddr() string {
	if x != nil {
		return x.BindAddr
	}
	return ""
}

func (x *JoinClusterRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type JoinClusterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	LeaderAddr    string                 `protobuf:"bytes,2,opt,name=leader_addr,json=leaderAddr,proto3" json:"leader_addr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinClusterResponse) Reset() {
	*x = JoinClusterResponse{}
	mi := &file_api_proto_warren_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinClusterResponse) ProtoMessage() {}

func (x *JoinClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinClusterResponse.ProtoReflect.Descriptor instead.
func (*JoinClusterResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{64}
}

func (x *JoinClusterResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *JoinClusterResponse) GetLeaderAddr() string {
	if x != nil {
		return x.LeaderAddr
	}
	return ""
}

type GetClusterInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterInfoRequest) Reset() {
	*x = GetClusterInfoRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterInfoRequest) ProtoMessage() {}

func (x *GetClusterInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterInfoRequest.ProtoReflect.Descriptor instead.
func (*GetClusterInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{65}
}

type GetClusterInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeaderId      string                 `protobuf:"bytes,1,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	LeaderAddr    string                 `protobuf:"bytes,2,opt,name=leader_addr,json=leaderAddr,proto3" json:"leader_addr,omitempty"`
	Servers       []*ClusterServer       `protobuf:"bytes,3,rep,name=servers,proto3" json:"servers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterInfoResponse) Reset() {
	*x = GetClusterInfoResponse{}
	mi := &file_api_proto_warren_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterInfoResponse) ProtoMessage() {}

func (x *GetClusterInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterInfoResponse.ProtoReflect.Descriptor instead.
func (*GetClusterInfoResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{66}
}

func (x *GetClusterInfoResponse) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *GetClusterInfoResponse) GetLeaderAddr() string {
	if x != nil {
		return x.LeaderAddr
	}
	return ""
}

func (x *GetClusterInfoResponse) GetServers() []*ClusterServer {
	if x != nil {
		return x.Servers
	}
	return nil
}

type ClusterServer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Suffrage      string                 `protobuf:"bytes,3,opt,name=suffrage,proto3" json:"suffrage,omitempty"` // "Voter", "Nonvoter", "Staging"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterServer) Reset() {
	*x = ClusterServer{}
	mi := &file_api_proto_warren_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterServer) ProtoMessage() {}

func (x *ClusterServer) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterServer.ProtoReflect.Descriptor instead.
func (*ClusterServer) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{67}
}

func (x *ClusterServer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ClusterServer) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ClusterServer) GetSuffrage() string {
	if x != nil {
		return x.Suffrage
	}
	return ""
}

// Health check messages
type ReportTaskHealthRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	TaskId               string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Healthy              bool                   `protobuf:"varint,2,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Message              string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	CheckedAt            *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=checked_at,json=checkedAt,proto3" json:"checked_at,omitempty"`
	ConsecutiveFailures  int32                  `protobuf:"varint,5,opt,name=consecutive_failures,json=consecutiveFailures,proto3" json:"consecutive_failures,omitempty"`
	ConsecutiveSuccesses int32                  `protobuf:"varint,6,opt,name=consecutive_successes,json=consecutiveSuccesses,proto3" json:"consecutive_successes,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ReportTaskHealthRequest) Reset() {
	*x = ReportTaskHealthRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportTaskHealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportTaskHealthRequest) ProtoMessage() {}

func (x *ReportTaskHealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportTaskHealthRequest.ProtoReflect.Descriptor instead.
func (*ReportTaskHealthRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{68}
}

func (x *ReportTaskHealthRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ReportTaskHealthRequest) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *ReportTaskHealthRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ReportTaskHealthRequest) GetCheckedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CheckedAt
	}
	return nil
}

func (x *ReportTaskHealthRequest) GetConsecutiveFailures() int32 {
	if x != nil {
		return x.ConsecutiveFailures
	}
	return 0
}

func (x *ReportTaskHealthRequest) GetConsecutiveSuccesses() int32 {
	if x != nil {
		return x.ConsecutiveSuccesses
	}
	return 0
}

type ReportTaskHealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportTaskHealthResponse) Reset() {
	*x = ReportTaskHealthResponse{}
	mi := &file_api_proto_warren_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportTaskHealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportTaskHealthResponse) ProtoMessage() {}

func (x *ReportTaskHealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportTaskHealthResponse.ProtoReflect.Descriptor instead.
func (*ReportTaskHealthResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{69}
}

func (x *ReportTaskHealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// Event streaming messages
type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_api_proto_warren_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{70}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Event) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Event) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Event) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type StreamEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventTypes    []string               `protobuf:"bytes,1,rep,name=event_types,json=eventTypes,proto3" json:"event_types,omitempty"` // Filter by event types (empty = all events)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamEventsRequest) Reset() {
	*x = StreamEventsRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEventsRequest) ProtoMessage() {}

func (x *StreamEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEventsRequest.ProtoReflect.Descriptor instead.
func (*StreamEventsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{71}
}

func (x *StreamEventsRequest) GetEventTypes() []string {
	if x != nil {
		return x.EventTypes
	}
	return nil
}

// Certificate messages
type RequestCertificateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestCertificateRequest) Reset() {
	*x = RequestCertificateRequest{}
	mi := &file_api_proto_warren_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestCertificateRequest) ProtoMessage() {}

func (x *RequestCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestCertificateRequest.ProtoReflect.Descriptor instead.
func (*RequestCertificateRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{72}
}

func (x *RequestCertificateRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *RequestCertificateRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type RequestCertificateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Certificate   []byte                 `protobuf:"bytes,1,opt,name=certificate,proto3" json:"certificate,omitempty"`
	PrivateKey    []byte                 `protobuf:"bytes,2,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	CaCert        []byte                 `protobuf:"bytes,3,opt,name=ca_cert,json=caCert,proto3" json:"ca_cert,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestCertificateResponse) Reset() {
	*x = RequestCertificateResponse{}
	mi := &file_api_proto_warren_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestCertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestCertificateResponse) ProtoMessage() {}

func (x *RequestCertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_warren_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestCertificateResponse.ProtoReflect.Descriptor instead.
func (*RequestCertificateResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_warren_proto_rawDescGZIP(), []int{73}
}

func (x *RequestCertificateResponse) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

func (x *RequestCertificateResponse) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *RequestCertificateResponse) GetCaCert() []byte {
	if x != nil {
		return x.CaCert
	}
	return nil
}

var File_api_proto_warren_proto protoreflect.FileDescriptor

const file_api_proto_warren_proto_rawDesc = "" +
	"\n" +
	"\x16api/proto/warren.proto\x12\twarren.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa1\x03\n" +
	"\x04Node\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04role\x18\x02 \x01(\tR\x04role\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x12\x1d\n" +
	"\n" +
	"overlay_ip\x18\x04 \x01(\tR\toverlayIp\x126\n" +
	"\tresources\x18\x05 \x01(\v2\x18.warren.v1.NodeResourcesR\tresources\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12A\n" +
	"\x0elast_heartbeat\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\rlastHeartbeat\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x123\n" +
	"\x06labels\x18\t \x03(\v2\x1b.warren.v1.Node.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"n\n" +
	"\rNodeResources\x12\x1b\n" +
	"\tcpu_cores\x18\x01 \x01(\x03R\bcpuCores\x12!\n" +
	"\fmemory_bytes\x18\x02 \x01(\x03R\vmemoryBytes\x12\x1d\n" +
	"\n" +
	"disk_bytes\x18\x03 \x01(\x03R\tdiskBytes\"\x8a\x02\n" +
	"\x13RegisterNodeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04role\x18\x02 \x01(\tR\x04role\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x126\n" +
	"\tresources\x18\x04 \x01(\v2\x18.warren.v1.NodeResourcesR\tresources\x12B\n" +
	"\x06labels\x18\x05 \x03(\v2*.warren.v1.RegisterNodeRequest.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"Z\n" +
	"\x14RegisterNodeResponse\x12#\n" +
	"\x04node\x18\x01 \x01(\v2\x0f.warren.v1.NodeR\x04node\x12\x1d\n" +
	"\n" +
	"overlay_ip\x18\x02 \x01(\tR\toverlayIp\"\xb2\x01\n" +
	"\x10HeartbeatRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12I\n" +
	"\x13available_resources\x18\x02 \x01(\v2\x18.warren.v1.NodeResourcesR\x12availableResources\x12:\n" +
	"\rtask_statuses\x18\x03 \x03(\v2\x15.warren.v1.TaskStatusR\ftaskStatuses\"+\n" +
	"\x11HeartbeatResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"\x81\x01\n" +
	"\n" +
	"TaskStatus\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12!\n" +
	"\factual_state\x18\x02 \x01(\tR\vactualState\x12!\n" +
	"\fcontainer_id\x18\x03 \x01(\tR\vcontainerId\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\"3\n" +
	"\x10ListNodesRequest\x12\x1f\n" +
	"\vrole_filter\x18\x01 \x01(\tR\n" +
	"roleFilter\":\n" +
	"\x11ListNodesResponse\x12%\n" +
	"\x05nodes\x18\x01 \x03(\v2\x0f.warren.v1.NodeR\x05nodes\" \n" +
	"\x0eGetNodeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"6\n" +
	"\x0fGetNodeResponse\x12#\n" +
	"\x04node\x18\x01 \x01(\v2\x0f.warren.v1.NodeR\x04node\"#\n" +
	"\x11RemoveNodeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\",\n" +
	"\x12RemoveNodeResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"\xab\x06\n" +
	"\aService\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05image\x18\x03 \x01(\tR\x05image\x12\x1a\n" +
	"\breplicas\x18\x04 \x01(\x05R\breplicas\x12\x12\n" +
	"\x04mode\x18\x05 \x01(\tR\x04mode\x12'\n" +
	"\x0fdeploy_strategy\x18\x06 \x01(\tR\x0edeployStrategy\x12<\n" +
	"\rupdate_config\x18\a \x01(\v2\x17.warren.v1.UpdateConfigR\fupdateConfig\x129\n" +
	"\fhealth_check\x18\b \x01(\v2\x16.warren.v1.HealthCheckR\vhealthCheck\x12?\n" +
	"\x0erestart_policy\x18\t \x01(\v2\x18.warren.v1.RestartPolicyR\rrestartPolicy\x12=\n" +
	"\tresources\x18\n" +
	" \x01(\v2\x1f.warren.v1.ResourceRequirementsR\tresources\x12\x1a\n" +
	"\bnetworks\x18\v \x03(\tR\bnetworks\x120\n" +
	"\avolumes\x18\f \x03(\v2\x16.warren.v1.VolumeMountR\avolumes\x12-\n" +
	"\x03env\x18\r \x03(\v2\x1b.warren.v1.Service.EnvEntryR\x03env\x12\x18\n" +
	"\acommand\x18\x0e \x03(\tR\acommand\x129\n" +
	"\n" +
	"created_at\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12,\n" +
	"\x05ports\x18\x11 \x03(\v2\x16.warren.v1.PortMappingR\x05ports\x12!\n" +
	"\fstop_timeout\x18\x12 \x01(\x05R\vstopTimeout\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"|\n" +
	"\fUpdateConfig\x12 \n" +
	"\vparallelism\x18\x01 \x01(\x05R\vparallelism\x12#\n" +
	"\rdelay_seconds\x18\x02 \x01(\x05R\fdelaySeconds\x12%\n" +
	"\x0efailure_action\x18\x03 \x01(\tR\rfailureAction\"\x90\x03\n" +
	"\vHealthCheck\x12/\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1b.warren.v1.HealthCheck.TypeR\x04type\x12.\n" +
	"\x04http\x18\x02 \x01(\v2\x1a.warren.v1.HTTPHealthCheckR\x04http\x12+\n" +
	"\x03tcp\x18\x03 \x01(\v2\x19.warren.v1.TCPHealthCheckR\x03tcp\x12.\n" +
	"\x04exec\x18\x04 \x01(\v2\x1a.warren.v1.ExecHealthCheckR\x04exec\x12)\n" +
	"\x10interval_seconds\x18\x05 \x01(\x05R\x0fintervalSeconds\x12'\n" +
	"\x0ftimeout_seconds\x18\x06 \x01(\x05R\x0etimeoutSeconds\x12\x18\n" +
	"\aretries\x18\a \x01(\x05R\aretries\x120\n" +
	"\x14start_period_seconds\x18\b \x01(\x05R\x12startPeriodSeconds\"#\n" +
	"\x04Type\x12\b\n" +
	"\x04HTTP\x10\x00\x12\a\n" +
	"\x03TCP\x10\x01\x12\b\n" +
	"\x04EXEC\x10\x02\"\xce\x01\n" +
	"\x0fHTTPHealthCheck\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12\x16\n" +
	"\x06scheme\x18\x03 \x01(\tR\x06scheme\x12+\n" +
	"\aheaders\x18\x04 \x03(\v2\x11.warren.v1.HeaderR\aheaders\x12&\n" +
	"\x0fstatus_code_min\x18\x05 \x01(\x05R\rstatusCodeMin\x12&\n" +
	"\x0fstatus_code_max\x18\x06 \x01(\x05R\rstatusCodeMax\"0\n" +
	"\x06Header\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"$\n" +
	"\x0eTCPHealthCheck\x12\x12\n" +
	"\x04port\x18\x01 \x01(\x05R\x04port\"+\n" +
	"\x0fExecHealthCheck\x12\x18\n" +
	"\acommand\x18\x01 \x03(\tR\acommand\"u\n" +
	"\rRestartPolicy\x12\x1c\n" +
	"\tcondition\x18\x01 \x01(\tR\tcondition\x12!\n" +
	"\fmax_attempts\x18\x02 \x01(\x05R\vmaxAttempts\x12#\n" +
	"\rdelay_seconds\x18\x03 \x01(\x05R\fdelaySeconds\"\x92\x01\n" +
	"\x14ResourceRequirements\x12\x1d\n" +
	"\n" +
	"cpu_shares\x18\x01 \x01(\x03R\tcpuShares\x12!\n" +
	"\fmemory_bytes\x18\x02 \x01(\x03R\vmemoryBytes\x128\n" +
	"\x18memory_reservation_bytes\x18\x03 \x01(\x03R\x16memoryReservationBytes\"Z\n" +
	"\vVolumeMount\x12\x16\n" +
	"\x06source\x18\x01 \x01(\tR\x06source\x12\x16\n" +
	"\x06target\x18\x02 \x01(\tR\x06target\x12\x1b\n" +
	"\tread_only\x18\x03 \x01(\bR\breadOnly\"\xee\x01\n" +
	"\vPortMapping\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12%\n" +
	"\x0econtainer_port\x18\x02 \x01(\x05R\rcontainerPort\x12\x1b\n" +
	"\thost_port\x18\x03 \x01(\x05R\bhostPort\x12\x1a\n" +
	"\bprotocol\x18\x04 \x01(\tR\bprotocol\x12E\n" +
	"\fpublish_mode\x18\x05 \x01(\x0e2\".warren.v1.PortMapping.PublishModeR\vpublishMode\"$\n" +
	"\vPublishMode\x12\b\n" +
	"\x04HOST\x10\x00\x12\v\n" +
	"\aINGRESS\x10\x01\"\xbf\x05\n" +
	"\x14CreateServiceRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05image\x18\x02 \x01(\tR\x05image\x12\x1a\n" +
	"\breplicas\x18\x03 \x01(\x05R\breplicas\x12\x12\n" +
	"\x04mode\x18\x04 \x01(\tR\x04mode\x12'\n" +
	"\x0fdeploy_strategy\x18\x05 \x01(\tR\x0edeployStrategy\x12<\n" +
	"\rupdate_config\x18\x06 \x01(\v2\x17.warren.v1.UpdateConfigR\fupdateConfig\x129\n" +
	"\fhealth_check\x18\a \x01(\v2\x16.warren.v1.HealthCheckR\vhealthCheck\x12?\n" +
	"\x0erestart_policy\x18\b \x01(\v2\x18.warren.v1.RestartPolicyR\rrestartPolicy\x12=\n" +
	"\tresources\x18\t \x01(\v2\x1f.warren.v1.ResourceRequirementsR\tresources\x12\x1a\n" +
	"\bnetworks\x18\n" +
	" \x03(\tR\bnetworks\x120\n" +
	"\avolumes\x18\v \x03(\v2\x16.warren.v1.VolumeMountR\avolumes\x12:\n" +
	"\x03env\x18\f \x03(\v2(.warren.v1.CreateServiceRequest.EnvEntryR\x03env\x12\x18\n" +
	"\acommand\x18\r \x03(\tR\acommand\x12,\n" +
	"\x05ports\x18\x0e \x03(\v2\x16.warren.v1.PortMappingR\x05ports\x12!\n" +
	"\fstop_timeout\x18\x0f \x01(\x05R\vstopTimeout\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"E\n" +
	"\x15CreateServiceResponse\x12,\n" +
	"\aservice\x18\x01 \x01(\v2\x12.warren.v1.ServiceR\aservice\"\xcc\x01\n" +
	"\x14UpdateServiceRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\breplicas\x18\x02 \x01(\x05R\breplicas\x12\x14\n" +
	"\x05image\x18\x03 \x01(\tR\x05image\x12:\n" +
	"\x03env\x18\x04 \x03(\v2(.warren.v1.UpdateServiceRequest.EnvEntryR\x03env\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"E\n" +
	"\x15UpdateServiceResponse\x12,\n" +
	"\aservice\x18\x01 \x01(\v2\x12.warren.v1.ServiceR\aservice\"&\n" +
	"\x14DeleteServiceRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"/\n" +
	"\x15DeleteServiceResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"7\n" +
	"\x11GetServiceRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"B\n" +
	"\x12GetServiceResponse\x12,\n" +
	"\aservice\x18\x01 \x01(\v2\x12.warren.v1.ServiceR\aservice\"\x15\n" +
	"\x13ListServicesRequest\"F\n" +
	"\x14ListServicesResponse\x12.\n" +
	"\bservices\x18\x01 \x03(\v2\x12.warren.v1.ServiceR\bservices\"\xa6\x06\n" +
	"\x04Task\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"service_id\x18\x02 \x01(\tR\tserviceId\x12!\n" +
	"\fservice_name\x18\x03 \x01(\tR\vserviceName\x12\x17\n" +
	"\anode_id\x18\x04 \x01(\tR\x06nodeId\x12!\n" +
	"\fcontainer_id\x18\x05 \x01(\tR\vcontainerId\x12#\n" +
	"\rdesired_state\x18\x06 \x01(\tR\fdesiredState\x12!\n" +
	"\factual_state\x18\a \x01(\tR\vactualState\x12\x14\n" +
	"\x05image\x18\b \x01(\tR\x05image\x12\x18\n" +
	"\acommand\x18\t \x03(\tR\acommand\x12*\n" +
	"\x03env\x18\n" +
	" \x03(\v2\x18.warren.v1.Task.EnvEntryR\x03env\x12=\n" +
	"\tresources\x18\v \x01(\v2\x1f.warren.v1.ResourceRequirementsR\tresources\x120\n" +
	"\avolumes\x18\f \x03(\v2\x16.warren.v1.VolumeMountR\avolumes\x129\n" +
	"\fhealth_check\x18\r \x01(\v2\x16.warren.v1.HealthCheckR\vhealthCheck\x12?\n" +
	"\x0erestart_policy\x18\x0e \x01(\v2\x18.warren.v1.RestartPolicyR\rrestartPolicy\x129\n" +
	"\n" +
	"created_at\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x14\n" +
	"\x05error\x18\x11 \x01(\tR\x05error\x12\x18\n" +
	"\asecrets\x18\x12 \x03(\tR\asecrets\x12!\n" +
	"\fstop_timeout\x18\x13 \x01(\x05R\vstopTimeout\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa7\x01\n" +
	"\x17UpdateTaskStatusRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\tR\x06nodeId\x12!\n" +
	"\factual_state\x18\x03 \x01(\tR\vactualState\x12!\n" +
	"\fcontainer_id\x18\x04 \x01(\tR\vcontainerId\x12\x14\n" +
	"\x05error\x18\x05 \x01(\tR\x05error\"2\n" +
	"\x18UpdateTaskStatusResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"J\n" +
	"\x10ListTasksRequest\x12\x1d\n" +
	"\n" +
	"service_id\x18\x01 \x01(\tR\tserviceId\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\tR\x06nodeId\":\n" +
	"\x11ListTasksResponse\x12%\n" +
	"\x05tasks\x18\x01 \x03(\v2\x0f.warren.v1.TaskR\x05tasks\" \n" +
	"\x0eGetTaskRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"6\n" +
	"\x0fGetTaskResponse\x12#\n" +
	"\x04task\x18\x01 \x01(\v2\x0f.warren.v1.TaskR\x04task\",\n" +
	"\x11WatchTasksRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\"D\n" +
	"\tTaskEvent\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12#\n" +
	"\x04task\x18\x02 \x01(\v2\x0f.warren.v1.TaskR\x04task\"{\n" +
	"\x06Secret\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x12\n" +
	"\x04data\x18\x04 \x01(\fR\x04data\"=\n" +
	"\x13CreateSecretRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"A\n" +
	"\x14CreateSecretResponse\x12)\n" +
	"\x06secret\x18\x01 \x01(\v2\x11.warren.v1.SecretR\x06secret\"%\n" +
	"\x13DeleteSecretRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\".\n" +
	"\x14DeleteSecretResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\",\n" +
	"\x16GetSecretByNameRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"D\n" +
	"\x17GetSecretByNameResponse\x12)\n" +
	"\x06secret\x18\x01 \x01(\v2\x11.warren.v1.SecretR\x06secret\"\x14\n" +
	"\x12ListSecretsRequest\"B\n" +
	"\x13ListSecretsResponse\x12+\n" +
	"\asecrets\x18\x01 \x03(\v2\x11.warren.v1.SecretR\asecrets\"\xac\x03\n" +
	"\x06Volume\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06driver\x18\x03 \x01(\tR\x06driver\x12B\n" +
	"\vdriver_opts\x18\x04 \x03(\v2!.warren.v1.Volume.DriverOptsEntryR\n" +
	"driverOpts\x125\n" +
	"\x06labels\x18\x05 \x03(\v2\x1d.warren.v1.Volume.LabelsEntryR\x06labels\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x17\n" +
	"\anode_id\x18\a \x01(\tR\x06nodeId\x12\x1d\n" +
	"\n" +
	"mount_path\x18\b \x01(\tR\tmountPath\x1a=\n" +
	"\x0fDriverOptsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd0\x02\n" +
	"\x13CreateVolumeRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06driver\x18\x02 \x01(\tR\x06driver\x12O\n" +
	"\vdriver_opts\x18\x03 \x03(\v2..warren.v1.CreateVolumeRequest.DriverOptsEntryR\n" +
	"driverOpts\x12B\n" +
	"\x06labels\x18\x04 \x03(\v2*.warren.v1.CreateVolumeRequest.LabelsEntryR\x06labels\x1a=\n" +
	"\x0fDriverOptsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"A\n" +
	"\x14CreateVolumeResponse\x12)\n" +
	"\x06volume\x18\x01 \x01(\v2\x11.warren.v1.VolumeR\x06volume\"%\n" +
	"\x13DeleteVolumeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\".\n" +
	"\x14DeleteVolumeResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\",\n" +
	"\x16GetVolumeByNameRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"D\n" +
	"\x17GetVolumeByNameResponse\x12)\n" +
	"\x06volume\x18\x01 \x01(\v2\x11.warren.v1.VolumeR\x06volume\"\x14\n" +
	"\x12ListVolumesRequest\"B\n" +
	"\x13ListVolumesResponse\x12+\n" +
	"\avolumes\x18\x01 \x03(\v2\x11.warren.v1.VolumeR\avolumes\".\n" +
	"\x18GenerateJoinTokenRequest\x12\x12\n" +
	"\x04role\x18\x01 \x01(\tR\x04role\"\x80\x01\n" +
	"\x19GenerateJoinTokenResponse\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\x12\x12\n" +
	"\x04role\x18\x02 \x01(\tR\x04role\x129\n" +
	"\n" +
	"expires_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\"`\n" +
	"\x12JoinClusterRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1b\n" +
	"\tbind_addr\x18\x02 \x01(\tR\bbindAddr\x12\x14\n" +
	"\x05token\x18\x03 \x01(\tR\x05token\"N\n" +
	"\x13JoinClusterResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x1f\n" +
	"\vleader_addr\x18\x02 \x01(\tR\n" +
	"leaderAddr\"\x17\n" +
	"\x15GetClusterInfoRequest\"\x8a\x01\n" +
	"\x16GetClusterInfoResponse\x12\x1b\n" +
	"\tleader_id\x18\x01 \x01(\tR\bleaderId\x12\x1f\n" +
	"\vleader_addr\x18\x02 \x01(\tR\n" +
	"leaderAddr\x122\n" +
	"\aservers\x18\x03 \x03(\v2\x18.warren.v1.ClusterServerR\aservers\"U\n" +
	"\rClusterServer\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x1a\n" +
	"\bsuffrage\x18\x03 \x01(\tR\bsuffrage\"\x89\x02\n" +
	"\x17ReportTaskHealthRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x18\n" +
	"\ahealthy\x18\x02 \x01(\bR\ahealthy\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x129\n" +
	"\n" +
	"checked_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcheckedAt\x121\n" +
	"\x14consecutive_failures\x18\x05 \x01(\x05R\x13consecutiveFailures\x123\n" +
	"\x15consecutive_successes\x18\x06 \x01(\x05R\x14consecutiveSuccesses\"2\n" +
	"\x18ReportTaskHealthResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"\xf8\x01\n" +
	"\x05Event\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12:\n" +
	"\bmetadata\x18\x05 \x03(\v2\x1e.warren.v1.Event.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"6\n" +
	"\x13StreamEventsRequest\x12\x1f\n" +
	"\vevent_types\x18\x01 \x03(\tR\n" +
	"eventTypes\"J\n" +
	"\x19RequestCertificateRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\"x\n" +
	"\x1aRequestCertificateResponse\x12 \n" +
	"\vcertificate\x18\x01 \x01(\fR\vcertificate\x12\x1f\n" +
	"\vprivate_key\x18\x02 \x01(\fR\n" +
	"privateKey\x12\x17\n" +
	"\aca_cert\x18\x03 \x01(\fR\x06caCert2\xd9\x11\n" +
	"\tWarrenAPI\x12O\n" +
	"\fRegisterNode\x12\x1e.warren.v1.RegisterNodeRequest\x1a\x1f.warren.v1.RegisterNodeResponse\x12F\n" +
	"\tHeartbeat\x12\x1b.warren.v1.HeartbeatRequest\x1a\x1c.warren.v1.HeartbeatResponse\x12F\n" +
	"\tListNodes\x12\x1b.warren.v1.ListNodesRequest\x1a\x1c.warren.v1.ListNodesResponse\x12@\n" +
	"\aGetNode\x12\x19.warren.v1.GetNodeRequest\x1a\x1a.warren.v1.GetNodeResponse\x12I\n" +
	"\n" +
	"RemoveNode\x12\x1c.warren.v1.RemoveNodeRequest\x1a\x1d.warren.v1.RemoveNodeResponse\x12R\n" +
	"\rCreateService\x12\x1f.warren.v1.CreateServiceRequest\x1a .warren.v1.CreateServiceResponse\x12R\n" +
	"\rUpdateService\x12\x1f.warren.v1.UpdateServiceRequest\x1a .warren.v1.UpdateServiceResponse\x12R\n" +
	"\rDeleteService\x12\x1f.warren.v1.DeleteServiceRequest\x1a .warren.v1.DeleteServiceResponse\x12I\n" +
	"\n" +
	"GetService\x12\x1c.warren.v1.GetServiceRequest\x1a\x1d.warren.v1.GetServiceResponse\x12O\n" +
	"\fListServices\x12\x1e.warren.v1.ListServicesRequest\x1a\x1f.warren.v1.ListServicesResponse\x12[\n" +
	"\x10UpdateTaskStatus\x12\".warren.v1.UpdateTaskStatusRequest\x1a#.warren.v1.UpdateTaskStatusResponse\x12F\n" +
	"\tListTasks\x12\x1b.warren.v1.ListTasksRequest\x1a\x1c.warren.v1.ListTasksResponse\x12@\n" +
	"\aGetTask\x12\x19.warren.v1.GetTaskRequest\x1a\x1a.warren.v1.GetTaskResponse\x12B\n" +
	"\n" +
	"WatchTasks\x12\x1c.warren.v1.WatchTasksRequest\x1a\x14.warren.v1.TaskEvent0\x01\x12[\n" +
	"\x10ReportTaskHealth\x12\".warren.v1.ReportTaskHealthRequest\x1a#.warren.v1.ReportTaskHealthResponse\x12O\n" +
	"\fCreateSecret\x12\x1e.warren.v1.CreateSecretRequest\x1a\x1f.warren.v1.CreateSecretResponse\x12X\n" +
	"\x0fGetSecretByName\x12!.warren.v1.GetSecretByNameRequest\x1a\".warren.v1.GetSecretByNameResponse\x12O\n" +
	"\fDeleteSecret\x12\x1e.warren.v1.DeleteSecretRequest\x1a\x1f.warren.v1.DeleteSecretResponse\x12L\n" +
	"\vListSecrets\x12\x1d.warren.v1.ListSecretsRequest\x1a\x1e.warren.v1.ListSecretsResponse\x12O\n" +
	"\fCreateVolume\x12\x1e.warren.v1.CreateVolumeRequest\x1a\x1f.warren.v1.CreateVolumeResponse\x12X\n" +
	"\x0fGetVolumeByName\x12!.warren.v1.GetVolumeByNameRequest\x1a\".warren.v1.GetVolumeByNameResponse\x12O\n" +
	"\fDeleteVolume\x12\x1e.warren.v1.DeleteVolumeRequest\x1a\x1f.warren.v1.DeleteVolumeResponse\x12L\n" +
	"\vListVolumes\x12\x1d.warren.v1.ListVolumesRequest\x1a\x1e.warren.v1.ListVolumesResponse\x12^\n" +
	"\x11GenerateJoinToken\x12#.warren.v1.GenerateJoinTokenRequest\x1a$.warren.v1.GenerateJoinTokenResponse\x12L\n" +
	"\vJoinCluster\x12\x1d.warren.v1.JoinClusterRequest\x1a\x1e.warren.v1.JoinClusterResponse\x12U\n" +
	"\x0eGetClusterInfo\x12 .warren.v1.GetClusterInfoRequest\x1a!.warren.v1.GetClusterInfoResponse\x12a\n" +
	"\x12RequestCertificate\x12$.warren.v1.RequestCertificateRequest\x1a%.warren.v1.RequestCertificateResponse\x12B\n" +
	"\fStreamEvents\x12\x1e.warren.v1.StreamEventsRequest\x1a\x10.warren.v1.Event0\x01B$Z\"github.com/cuemby/warren/api/protob\x06proto3"

var (
	file_api_proto_warren_proto_rawDescOnce sync.Once
	file_api_proto_warren_proto_rawDescData []byte
)

func file_api_proto_warren_proto_rawDescGZIP() []byte {
	file_api_proto_warren_proto_rawDescOnce.Do(func() {
		file_api_proto_warren_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_warren_proto_rawDesc), len(file_api_proto_warren_proto_rawDesc)))
	})
	return file_api_proto_warren_proto_rawDescData
}

var file_api_proto_warren_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_proto_warren_proto_msgTypes = make([]protoimpl.MessageInfo, 85)
var file_api_proto_warren_proto_goTypes = []any{
	(HealthCheck_Type)(0),              // 0: warren.v1.HealthCheck.Type
	(PortMapping_PublishMode)(0),       // 1: warren.v1.PortMapping.PublishMode
	(*Node)(nil),                       // 2: warren.v1.Node
	(*NodeResources)(nil),              // 3: warren.v1.NodeResources
	(*RegisterNodeRequest)(nil),        // 4: warren.v1.RegisterNodeRequest
	(*RegisterNodeResponse)(nil),       // 5: warren.v1.RegisterNodeResponse
	(*HeartbeatRequest)(nil),           // 6: warren.v1.HeartbeatRequest
	(*HeartbeatResponse)(nil),          // 7: warren.v1.HeartbeatResponse
	(*TaskStatus)(nil),                 // 8: warren.v1.TaskStatus
	(*ListNodesRequest)(nil),           // 9: warren.v1.ListNodesRequest
	(*ListNodesResponse)(nil),          // 10: warren.v1.ListNodesResponse
	(*GetNodeRequest)(nil),             // 11: warren.v1.GetNodeRequest
	(*GetNodeResponse)(nil),            // 12: warren.v1.GetNodeResponse
	(*RemoveNodeRequest)(nil),          // 13: warren.v1.RemoveNodeRequest
	(*RemoveNodeResponse)(nil),         // 14: warren.v1.RemoveNodeResponse
	(*Service)(nil),                    // 15: warren.v1.Service
	(*UpdateConfig)(nil),               // 16: warren.v1.UpdateConfig
	(*HealthCheck)(nil),                // 17: warren.v1.HealthCheck
	(*HTTPHealthCheck)(nil),            // 18: warren.v1.HTTPHealthCheck
	(*Header)(nil),                     // 19: warren.v1.Header
	(*TCPHealthCheck)(nil),             // 20: warren.v1.TCPHealthCheck
	(*ExecHealthCheck)(nil),            // 21: warren.v1.ExecHealthCheck
	(*RestartPolicy)(nil),              // 22: warren.v1.RestartPolicy
	(*ResourceRequirements)(nil),       // 23: warren.v1.ResourceRequirements
	(*VolumeMount)(nil),                // 24: warren.v1.VolumeMount
	(*PortMapping)(nil),                // 25: warren.v1.PortMapping
	(*CreateServiceRequest)(nil),       // 26: warren.v1.CreateServiceRequest
	(*CreateServiceResponse)(nil),      // 27: warren.v1.CreateServiceResponse
	(*UpdateServiceRequest)(nil),       // 28: warren.v1.UpdateServiceRequest
	(*UpdateServiceResponse)(nil),      // 29: warren.v1.UpdateServiceResponse
	(*DeleteServiceRequest)(nil),       // 30: warren.v1.DeleteServiceRequest
	(*DeleteServiceResponse)(nil),      // 31: warren.v1.DeleteServiceResponse
	(*GetServiceRequest)(nil),          // 32: warren.v1.GetServiceRequest
	(*GetServiceResponse)(nil),         // 33: warren.v1.GetServiceResponse
	(*ListServicesRequest)(nil),        // 34: warren.v1.ListServicesRequest
	(*ListServicesResponse)(nil),       // 35: warren.v1.ListServicesResponse
	(*Task)(nil),                       // 36: warren.v1.Task
	(*UpdateTaskStatusRequest)(nil),    // 37: warren.v1.UpdateTaskStatusRequest
	(*UpdateTaskStatusResponse)(nil),   // 38: warren.v1.UpdateTaskStatusResponse
	(*ListTasksRequest)(nil),           // 39: warren.v1.ListTasksRequest
	(*ListTasksResponse)(nil),          // 40: warren.v1.ListTasksResponse
	(*GetTaskRequest)(nil),             // 41: warren.v1.GetTaskRequest
	(*GetTaskResponse)(nil),            // 42: warren.v1.GetTaskResponse
	(*WatchTasksRequest)(nil),          // 43: warren.v1.WatchTasksRequest
	(*TaskEvent)(nil),                  // 44: warren.v1.TaskEvent
	(*Secret)(nil),                     // 45: warren.v1.Secret
	(*CreateSecretRequest)(nil),        // 46: warren.v1.CreateSecretRequest
	(*CreateSecretResponse)(nil),       // 47: warren.v1.CreateSecretResponse
	(*DeleteSecretRequest)(nil),        // 48: warren.v1.DeleteSecretRequest
	(*DeleteSecretResponse)(nil),       // 49: warren.v1.DeleteSecretResponse
	(*GetSecretByNameRequest)(nil),     // 50: warren.v1.GetSecretByNameRequest
	(*GetSecretByNameResponse)(nil),    // 51: warren.v1.GetSecretByNameResponse
	(*ListSecretsRequest)(nil),         // 52: warren.v1.ListSecretsRequest
	(*ListSecretsResponse)(nil),        // 53: warren.v1.ListSecretsResponse
	(*Volume)(nil),                     // 54: warren.v1.Volume
	(*CreateVolumeRequest)(nil),        // 55: warren.v1.CreateVolumeRequest
	(*CreateVolumeResponse)(nil),       // 56: warren.v1.CreateVolumeResponse
	(*DeleteVolumeRequest)(nil),        // 57: warren.v1.DeleteVolumeRequest
	(*DeleteVolumeResponse)(nil),       // 58: warren.v1.DeleteVolumeResponse
	(*GetVolumeByNameRequest)(nil),     // 59: warren.v1.GetVolumeByNameRequest
	(*GetVolumeByNameResponse)(nil),    // 60: warren.v1.GetVolumeByNameResponse
	(*ListVolumesRequest)(nil),         // 61: warren.v1.ListVolumesRequest
	(*ListVolumesResponse)(nil),        // 62: warren.v1.ListVolumesResponse
	(*GenerateJoinTokenRequest)(nil),   // 63: warren.v1.GenerateJoinTokenRequest
	(*GenerateJoinTokenResponse)(nil),  // 64: warren.v1.GenerateJoinTokenResponse
	(*JoinClusterRequest)(nil),         // 65: warren.v1.JoinClusterRequest
	(*JoinClusterResponse)(nil),        // 66: warren.v1.JoinClusterResponse
	(*GetClusterInfoRequest)(nil),      // 67: warren.v1.GetClusterInfoRequest
	(*GetClusterInfoResponse)(nil),     // 68: warren.v1.GetClusterInfoResponse
	(*ClusterServer)(nil),              // 69: warren.v1.ClusterServer
	(*ReportTaskHealthRequest)(nil),    // 70: warren.v1.ReportTaskHealthRequest
	(*ReportTaskHealthResponse)(nil),   // 71: warren.v1.ReportTaskHealthResponse
	(*Event)(nil),                      // 72: warren.v1.Event
	(*StreamEventsRequest)(nil),        // 73: warren.v1.StreamEventsRequest
	(*RequestCertificateRequest)(nil),  // 74: warren.v1.RequestCertificateRequest
	(*RequestCertificateResponse)(nil), // 75: warren.v1.RequestCertificateResponse
	nil,                                // 76: warren.v1.Node.LabelsEntry
	nil,                                // 77: warren.v1.RegisterNodeRequest.LabelsEntry
	nil,                                // 78: warren.v1.Service.EnvEntry
	nil,                                // 79: warren.v1.CreateServiceRequest.EnvEntry
	nil,                                // 80: warren.v1.UpdateServiceRequest.EnvEntry
	nil,                                // 81: warren.v1.Task.EnvEntry
	nil,                                // 82: warren.v1.Volume.DriverOptsEntry
	nil,                                // 83: warren.v1.Volume.LabelsEntry
	nil,                                // 84: warren.v1.CreateVolumeRequest.DriverOptsEntry
	nil,                                // 85: warren.v1.CreateVolumeRequest.LabelsEntry
	nil,                                // 86: warren.v1.Event.MetadataEntry
	(*timestamppb.Timestamp)(nil),      // 87: google.protobuf.Timestamp
}
var file_api_proto_warren_proto_depIdxs = []int32{
	3,  // 0: warren.v1.Node.resources:type_name -> warren.v1.NodeResources
	87, // 1: warren.v1.Node.last_heartbeat:type_name -> google.protobuf.Timestamp
	87, // 2: warren.v1.Node.created_at:type_name -> google.protobuf.Timestamp
	76, // 3: warren.v1.Node.labels:type_name -> warren.v1.Node.LabelsEntry
	3,  // 4: warren.v1.RegisterNodeRequest.resources:type_name -> warren.v1.NodeResources
	77, // 5: warren.v1.RegisterNodeRequest.labels:type_name -> warren.v1.RegisterNodeRequest.LabelsEntry
	2,  // 6: warren.v1.RegisterNodeResponse.node:type_name -> warren.v1.Node
	3,  // 7: warren.v1.HeartbeatRequest.available_resources:type_name -> warren.v1.NodeResources
	8,  // 8: warren.v1.HeartbeatRequest.task_statuses:type_name -> warren.v1.TaskStatus
	2,  // 9: warren.v1.ListNodesResponse.nodes:type_name -> warren.v1.Node
	2,  // 10: warren.v1.GetNodeResponse.node:type_name -> warren.v1.Node
	16, // 11: warren.v1.Service.update_config:type_name -> warren.v1.UpdateConfig
	17, // 12: warren.v1.Service.health_check:type_name -> warren.v1.HealthCheck
	22, // 13: warren.v1.Service.restart_policy:type_name -> warren.v1.RestartPolicy
	23, // 14: warren.v1.Service.resources:type_name -> warren.v1.ResourceRequirements
	24, // 15: warren.v1.Service.volumes:type_name -> warren.v1.VolumeMount
	78, // 16: warren.v1.Service.env:type_name -> warren.v1.Service.EnvEntry
	87, // 17: warren.v1.Service.created_at:type_name -> google.protobuf.Timestamp
	87, // 18: warren.v1.Service.updated_at:type_name -> google.protobuf.Timestamp
	25, // 19: warren.v1.Service.ports:type_name -> warren.v1.PortMapping
	0,  // 20: warren.v1.HealthCheck.type:type_name -> warren.v1.HealthCheck.Type
	18, // 21: warren.v1.HealthCheck.http:type_name -> warren.v1.HTTPHealthCheck
	20, // 22: warren.v1.HealthCheck.tcp:type_name -> warren.v1.TCPHealthCheck
	21, // 23: warren.v1.HealthCheck.exec:type_name -> warren.v1.ExecHealthCheck
	19, // 24: warren.v1.HTTPHealthCheck.headers:type_name -> warren.v1.Header
	1,  // 25: warren.v1.PortMapping.publish_mode:type_name -> warren.v1.PortMapping.PublishMode
	16, // 26: warren.v1.CreateServiceRequest.update_config:type_name -> warren.v1.UpdateConfig
	17, // 27: warren.v1.CreateServiceRequest.health_check:type_name -> warren.v1.HealthCheck
	22, // 28: warren.v1.CreateServiceRequest.restart_policy:type_name -> warren.v1.RestartPolicy
	23, // 29: warren.v1.CreateServiceRequest.resources:type_name -> warren.v1.ResourceRequirements
	24, // 30: warren.v1.CreateServiceRequest.volumes:type_name -> warren.v1.VolumeMount
	79, // 31: warren.v1.CreateServiceRequest.env:type_name -> warren.v1.CreateServiceRequest.EnvEntry
	25, // 32: warren.v1.CreateServiceRequest.ports:type_name -> warren.v1.PortMapping
	15, // 33: warren.v1.CreateServiceResponse.service:type_name -> warren.v1.Service
	80, // 34: warren.v1.UpdateServiceRequest.env:type_name -> warren.v1.UpdateServiceRequest.EnvEntry
	15, // 35: warren.v1.UpdateServiceResponse.service:type_name -> warren.v1.Service
	15, // 36: warren.v1.GetServiceResponse.service:type_name -> warren.v1.Service
	15, // 37: warren.v1.ListServicesResponse.services:type_name -> warren.v1.Service
	81, // 38: warren.v1.Task.env:type_name -> warren.v1.Task.EnvEntry
	23, // 39: warren.v1.Task.resources:type_name -> warren.v1.ResourceRequirements
	24, // 40: warren.v1.Task.volumes:type_name -> warren.v1.VolumeMount
	17, // 41: warren.v1.Task.health_check:type_name -> warren.v1.HealthCheck
	22, // 42: warren.v1.Task.restart_policy:type_name -> warren.v1.RestartPolicy
	87, // 43: warren.v1.Task.created_at:type_name -> google.protobuf.Timestamp
	87, // 44: warren.v1.Task.updated_at:type_name -> google.protobuf.Timestamp
	36, // 45: warren.v1.ListTasksResponse.tasks:type_name -> warren.v1.Task
	36, // 46: warren.v1.GetTaskResponse.task:type_name -> warren.v1.Task
	36, // 47: warren.v1.TaskEvent.task:type_name -> warren.v1.Task
	87, // 48: warren.v1.Secret.created_at:type_name -> google.protobuf.Timestamp
	45, // 49: warren.v1.CreateSecretResponse.secret:type_name -> warren.v1.Secret
	45, // 50: warren.v1.GetSecretByNameResponse.secret:type_name -> warren.v1.Secret
	45, // 51: warren.v1.ListSecretsResponse.secrets:type_name -> warren.v1.Secret
	82, // 52: warren.v1.Volume.driver_opts:type_name -> warren.v1.Volume.DriverOptsEntry
	83, // 53: warren.v1.Volume.labels:type_name -> warren.v1.Volume.LabelsEntry
	87, // 54: warren.v1.Volume.created_at:type_name -> google.protobuf.Timestamp
	84, // 55: warren.v1.CreateVolumeRequest.driver_opts:type_name -> warren.v1.CreateVolumeRequest.DriverOptsEntry
	85, // 56: warren.v1.CreateVolumeRequest.labels:type_name -> warren.v1.CreateVolumeRequest.LabelsEntry
	54, // 57: warren.v1.CreateVolumeResponse.volume:type_name -> warren.v1.Volume
	54, // 58: warren.v1.GetVolumeByNameResponse.volume:type_name -> warren.v1.Volume
	54, // 59: warren.v1.ListVolumesResponse.volumes:type_name -> warren.v1.Volume
	87, // 60: warren.v1.GenerateJoinTokenResponse.expires_at:type_name -> google.protobuf.Timestamp
	69, // 61: warren.v1.GetClusterInfoResponse.servers:type_name -> warren.v1.ClusterServer
	87, // 62: warren.v1.ReportTaskHealthRequest.checked_at:type_name -> google.protobuf.Timestamp
	87, // 63: warren.v1.Event.timestamp:type_name -> google.protobuf.Timestamp
	86, // 64: warren.v1.Event.metadata:type_name -> warren.v1.Event.MetadataEntry
	4,  // 65: warren.v1.WarrenAPI.RegisterNode:input_type -> warren.v1.RegisterNodeRequest
	6,  // 66: warren.v1.WarrenAPI.Heartbeat:input_type -> warren.v1.HeartbeatRequest
	9,  // 67: warren.v1.WarrenAPI.ListNodes:input_type -> warren.v1.ListNodesRequest
	11, // 68: warren.v1.WarrenAPI.GetNode:input_type -> warren.v1.GetNodeRequest
	13, // 69: warren.v1.WarrenAPI.RemoveNode:input_type -> warren.v1.RemoveNodeRequest
	26, // 70: warren.v1.WarrenAPI.CreateService:input_type -> warren.v1.CreateServiceRequest
	28, // 71: warren.v1.WarrenAPI.UpdateService:input_type -> warren.v1.UpdateServiceRequest
	30, // 72: warren.v1.WarrenAPI.DeleteService:input_type -> warren.v1.DeleteServiceRequest
	32, // 73: warren.v1.WarrenAPI.GetService:input_type -> warren.v1.GetServiceRequest
	34, // 74: warren.v1.WarrenAPI.ListServices:input_type -> warren.v1.ListServicesRequest
	37, // 75: warren.v1.WarrenAPI.UpdateTaskStatus:input_type -> warren.v1.UpdateTaskStatusRequest
	39, // 76: warren.v1.WarrenAPI.ListTasks:input_type -> warren.v1.ListTasksRequest
	41, // 77: warren.v1.WarrenAPI.GetTask:input_type -> warren.v1.GetTaskRequest
	43, // 78: warren.v1.WarrenAPI.WatchTasks:input_type -> warren.v1.WatchTasksRequest
	70, // 79: warren.v1.WarrenAPI.ReportTaskHealth:input_type -> warren.v1.ReportTaskHealthRequest
	46, // 80: warren.v1.WarrenAPI.CreateSecret:input_type -> warren.v1.CreateSecretRequest
	50, // 81: warren.v1.WarrenAPI.GetSecretByName:input_type -> warren.v1.GetSecretByNameRequest
	48, // 82: warren.v1.WarrenAPI.DeleteSecret:input_type -> warren.v1.DeleteSecretRequest
	52, // 83: warren.v1.WarrenAPI.ListSecrets:input_type -> warren.v1.ListSecretsRequest
	55, // 84: warren.v1.WarrenAPI.CreateVolume:input_type -> warren.v1.CreateVolumeRequest
	59, // 85: warren.v1.WarrenAPI.GetVolumeByName:input_type -> warren.v1.GetVolumeByNameRequest
	57, // 86: warren.v1.WarrenAPI.DeleteVolume:input_type -> warren.v1.DeleteVolumeRequest
	61, // 87: warren.v1.WarrenAPI.ListVolumes:input_type -> warren.v1.ListVolumesRequest
	63, // 88: warren.v1.WarrenAPI.GenerateJoinToken:input_type -> warren.v1.GenerateJoinTokenRequest
	65, // 89: warren.v1.WarrenAPI.JoinCluster:input_type -> warren.v1.JoinClusterRequest
	67, // 90: warren.v1.WarrenAPI.GetClusterInfo:input_type -> warren.v1.GetClusterInfoRequest
	74, // 91: warren.v1.WarrenAPI.RequestCertificate:input_type -> warren.v1.RequestCertificateRequest
	73, // 92: warren.v1.WarrenAPI.StreamEvents:input_type -> warren.v1.StreamEventsRequest
	5,  // 93: warren.v1.WarrenAPI.RegisterNode:output_type -> warren.v1.RegisterNodeResponse
	7,  // 94: warren.v1.WarrenAPI.Heartbeat:output_type -> warren.v1.HeartbeatResponse
	10, // 95: warren.v1.WarrenAPI.ListNodes:output_type -> warren.v1.ListNodesResponse
	12, // 96: warren.v1.WarrenAPI.GetNode:output_type -> warren.v1.GetNodeResponse
	14, // 97: warren.v1.WarrenAPI.RemoveNode:output_type -> warren.v1.RemoveNodeResponse
	27, // 98: warren.v1.WarrenAPI.CreateService:output_type -> warren.v1.CreateServiceResponse
	29, // 99: warren.v1.WarrenAPI.UpdateService:output_type -> warren.v1.UpdateServiceResponse
	31, // 100: warren.v1.WarrenAPI.DeleteService:output_type -> warren.v1.DeleteServiceResponse
	33, // 101: warren.v1.WarrenAPI.GetService:output_type -> warren.v1.GetServiceResponse
	35, // 102: warren.v1.WarrenAPI.ListServices:output_type -> warren.v1.ListServicesResponse
	38, // 103: warren.v1.WarrenAPI.UpdateTaskStatus:output_type -> warren.v1.UpdateTaskStatusResponse
	40, // 104: warren.v1.WarrenAPI.ListTasks:output_type -> warren.v1.ListTasksResponse
	42, // 105: warren.v1.WarrenAPI.GetTask:output_type -> warren.v1.GetTaskResponse
	44, // 106: warren.v1.WarrenAPI.WatchTasks:output_type -> warren.v1.TaskEvent
	71, // 107: warren.v1.WarrenAPI.ReportTaskHealth:output_type -> warren.v1.ReportTaskHealthResponse
	47, // 108: warren.v1.WarrenAPI.CreateSecret:output_type -> warren.v1.CreateSecretResponse
	51, // 109: warren.v1.WarrenAPI.GetSecretByName:output_type -> warren.v1.GetSecretByNameResponse
	49, // 110: warren.v1.WarrenAPI.DeleteSecret:output_type -> warren.v1.DeleteSecretResponse
	53, // 111: warren.v1.WarrenAPI.ListSecrets:output_type -> warren.v1.ListSecretsResponse
	56, // 112: warren.v1.WarrenAPI.CreateVolume:output_type -> warren.v1.CreateVolumeResponse
	60, // 113: warren.v1.WarrenAPI.GetVolumeByName:output_type -> warren.v1.GetVolumeByNameResponse
	58, // 114: warren.v1.WarrenAPI.DeleteVolume:output_type -> warren.v1.DeleteVolumeResponse
	62, // 115: warren.v1.WarrenAPI.ListVolumes:output_type -> warren.v1.ListVolumesResponse
	64, // 116: warren.v1.WarrenAPI.GenerateJoinToken:output_type -> warren.v1.GenerateJoinTokenResponse
	66, // 117: warren.v1.WarrenAPI.JoinCluster:output_type -> warren.v1.JoinClusterResponse
	68, // 118: warren.v1.WarrenAPI.GetClusterInfo:output_type -> warren.v1.GetClusterInfoResponse
	75, // 119: warren.v1.WarrenAPI.RequestCertificate:output_type -> warren.v1.RequestCertificateResponse
	72, // 120: warren.v1.WarrenAPI.StreamEvents:output_type -> warren.v1.Event
	93, // [93:121] is the sub-list for method output_type
	65, // [65:93] is the sub-list for method input_type
	65, // [65:65] is the sub-list for extension type_name
	65, // [65:65] is the sub-list for extension extendee
	0,  // [0:65] is the sub-list for field type_name
}

func init() { file_api_proto_warren_proto_init() }
func file_api_proto_warren_proto_init() {
	if File_api_proto_warren_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_warren_proto_rawDesc), len(file_api_proto_warren_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   85,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_warren_proto_goTypes,
		DependencyIndexes: file_api_proto_warren_proto_depIdxs,
		EnumInfos:         file_api_proto_warren_proto_enumTypes,
		MessageInfos:      file_api_proto_warren_proto_msgTypes,
	}.Build()
	File_api_proto_warren_proto = out.File
	file_api_proto_warren_proto_goTypes = nil
	file_api_proto_warren_proto_depIdxs = nil
}
